{"version":3,"sources":["components/chat/Message.jsx","components/chat/Chat.jsx","reportWebVitals.js","pages/Home.jsx","index.js","components/chat/index.module.scss","components/user/index.module.scss","components/login/index.module.scss"],"names":["Message","content","sender","className","classnames","styles","message","message__sender","Chat","useState","setMessage","handleOnKeyDown","useCallback","key","console","log","handleOnChange","target","value","chat","messages","messageInput","onChange","onKeyDown","type","reportWebVitals","RTCPeerConnection","iceServers","urls","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gNAYeA,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAC1B,OACE,qBAAKC,UAAWC,IAAWC,IAAOC,QAAR,eAAoBD,IAAOE,gBAAkBL,IAAvE,SACGD,KC0BQO,EA7BF,SAAC,GAAS,eAErB,MAA8BC,qBAA9B,mBAAOH,EAAP,KAAgBI,EAAhB,KAEMC,EAAkBC,uBAAY,YACtB,UADmC,EAAVC,KAChBC,QAAQC,IAAI,iBAAkBT,KAClD,CAACA,IAEEU,EAAiBJ,uBAAY,YAAiB,IAAdK,EAAa,EAAbA,OACpCP,EAAWO,EAAOC,SACjB,IAEH,OACE,sBAAKf,UAAWE,IAAOc,KAAvB,UACE,sBAAKhB,UAAWE,IAAOe,SAAvB,UACE,cAAC,EAAD,CAASnB,QAAQ,aAAaC,QAAQ,IACtC,cAAC,EAAD,CAASD,QAAQ,eACjB,cAAC,EAAD,CAASA,QAAQ,aAAaC,QAAQ,IACtC,cAAC,EAAD,CAASD,QAAQ,aAAYC,QAAQ,IACrC,cAAC,EAAD,CAASD,QAAQ,eACjB,cAAC,EAAD,CAASA,QAAQ,kBAEnB,qBAAKE,UAAWE,IAAOgB,aAAvB,SACE,uBAAOC,SAAUN,EAAgBO,UAAWZ,EAAiBa,KAAK,eCf3DC,G,4CCTI,IAAIC,kBAAkB,CACvCC,WAAY,CAAC,CAACC,KAAM,mC,MDJE,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QEAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAMtC,QAAS,iBAEjBuC,SAASC,eAAe,SAM1BhB,K,mBChBAiB,EAAOC,QAAU,CAAC,KAAO,mBAAmB,aAAe,2BAA2B,QAAU,sBAAsB,gBAAkB,gC,mBCAxID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,mBCAvDD,EAAOC,QAAU,CAAC,MAAQ,wB","file":"static/js/main.10d7a33f.chunk.js","sourcesContent":["import styles from './index.module.scss';\nimport React, { useState } from 'react';\nimport classnames from 'classnames';\n\nconst Message = ({ content, sender }) => {\n  return (\n    <div className={classnames(styles.message, { [styles.message__sender]: sender })}>\n      {content}\n    </div>\n  );\n}\n\nexport default Message;","import styles from './index.module.scss';\nimport React, { useCallback, useState } from 'react';\nimport Message from './Message';\n\nconst Chat = ({ }) => {\n\n  const [message, setMessage] = useState();\n\n  const handleOnKeyDown = useCallback(({ key }) => {\n    if (key === 'Enter') console.log('Sengin message', message);\n  }, [message]);\n\n  const handleOnChange = useCallback(({ target }) => {\n    setMessage(target.value);\n  }, []);\n\n  return (\n    <div className={styles.chat}>\n      <div className={styles.messages}>\n        <Message content=\"Ej sta ima\" sender={true}></Message>\n        <Message content=\"Ej sta ima\"></Message>\n        <Message content=\"Ej sta ima\" sender={true}></Message>\n        <Message content=\"Ej sta ima\"sender={true}></Message>\n        <Message content=\"Ej sta ima\"></Message>\n        <Message content=\"Ej sta ima\"></Message>\n      </div>\n      <div className={styles.messageInput}>\n        <input onChange={handleOnChange} onKeyDown={handleOnKeyDown} type=\"text\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useRef, useState } from \"react\";\nimport UserList from \"../components/user/UserList\";\n\nconst connection = new RTCPeerConnection({\n  iceServers: [{urls: \"stun:stun.1.google.com:19302\"}]\n});\n\nconst Home = ({ nickname, socket }) => {\n\n  const localVideoRef = useRef();\n  const remoteVideoRef = useRef();\n\n  const [offer, setOffer] = useState();\n  const [callerId, setCallerId] = useState();\n  const [users, setUsers] = useState([]);\n\n  const [stream, setStream] = useState();\n\n  useEffect(() => {\n\n    const queue = [];\n\n    socket?.on('welcome', (users) => setUsers(users));\n    socket?.on('offer', ({ offer, callerId }) => {\n      console.log('Recieve offer', offer, callerId); \n      setOffer(offer); \n      setCallerId(callerId); \n      connection.setRemoteDescription(new RTCSessionDescription(offer))\n        .then(() => {\n          console.log('Remote description is set');\n          queue.forEach(candidate => {\n\n          });\n        });\n    });\n    socket?.on('answer', (answer) => {\n      console.log('Recieve answer', new RTCSessionDescription(answer)); \n      connection.setRemoteDescription(new RTCSessionDescription(answer));\n    });\n    socket?.on('icecandidate', async (candidate) => {\n      console.log('Adding ICE candidate...', new RTCIceCandidate(candidate));\n      connection.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n\n\n\n    connection.ontrack = (e) => {\n      console.log(\"Answer got some connection \");\n       if (remoteVideoRef.current.srcObject !== e.streams[0]) {\n        remoteVideoRef.current.srcObject = e.streams[0];\n       }\n    }\n\n\n\n\n  }, [socket]);\n\n  const open = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n    setStream(stream);\n    localVideoRef.current.srcObject = stream;\n  }\n\n  const handleOnCall = (async (id) => {\n\n\n    connection.ontrack = () => {\n      console.log('I got some tracks!');\n    };\n\n    connection.onicecandidate = (e) => {\n      if (e.candidate) { socket?.emit('icecandidate', { id, candidate: new RTCIceCandidate(e.candidate) }); }\n    }\n\n    stream.getTracks().forEach(track => connection.addTrack(track, stream));\n\n    const offer = await connection.createOffer({ offerToReceiveAudio: true, offerToReceiveVideo: true });\n\n\n\n    socket?.emit('offer', { id, offer}, () => {\n      console.log('Offer callback');\n    });\n    \n\n    connection.setLocalDescription(offer);\n\n\n      \n  });\n\n  const handleAnswer = (async() => {\n\n    connection.onicecandidate = (e) => {\n      if (e.candidate) { socket?.emit('icecandidate', { id: callerId, candidate: new RTCIceCandidate(e.candidate) }); }\n    }\n\n    // connection.ontrack = (e) => {\n    //   console.log(\"Answer got some connection \");\n    //    if (remoteVideoRef.current.srcObject !== e.streams[0]) {\n    //     remoteVideoRef.current.srcObject = e.streams[0];\n    //    }\n    // }\n\n    const answer = await connection.createAnswer();\n\n    socket?.emit('answer', { id: callerId, answer });\n\n    await connection.setLocalDescription(answer);\n\n    \n  });\n\n  return (\n    <div className=\"home\">\n      <UserList users={users} onCall={handleOnCall} />\n      { offer && <button onClick={handleAnswer}>Answer</button> }\n      { callerId && `Caller: ${callerId}` }\n      <video ref={localVideoRef} autoPlay playsInline />\n      <video ref={remoteVideoRef} autoPlay playsInline />\n\n      <button onClick={open}>\n        OPEN\n      </button>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Chat from './components/chat/Chat';\nimport Message from './components/chat/Message';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat content={\"Ej sta ima\"} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"chat_chat__16YQr\",\"messageInput\":\"chat_messageInput__wyxMG\",\"message\":\"chat_message__35AWL\",\"message__sender\":\"chat_message__sender__31rk4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"user_user__CVTWO\",\"userlist\":\"user_userlist__2yMXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__HXn3V\"};"],"sourceRoot":""}