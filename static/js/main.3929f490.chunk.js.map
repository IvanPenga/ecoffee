{"version":3,"sources":["components/stream/Stream.jsx","pages/App.jsx","reportWebVitals.js","index.js"],"names":["Stream","navigation","connection","useMemo","RTCPeerConnection","useState","stream","setStream","console","log","navigator","src","setSrc","videoRef","useRef","textareaRef","handlePlayStream","useCallback","a","mediaDevices","getUserMedia","audio","video","useEffect","current","srcObject","enumerateDevices","then","devices","catch","handleOffer","onicecandidate","e","candidate","value","obj","JSON","parse","candidates","push","address","component","foundation","port","priority","protocol","relatedAddress","relatedPort","sdpMLineIndex","sdpMid","tcpType","type","usernameFragment","stringify","ontrack","getTracks","forEach","track","addTrack","createOffer","offerToReceiveAudio","offerToReceiveVideo","offer","setLocalDescription","handleAnswer","streams","setRemoteDescription","map","c","addIceCandidate","createAnswer","answer","handleLoad","className","styles","suppressContentEditableWarning","ref","autoPlay","playsInline","onClick","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3929f490.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport styles from './index.module.scss';\n\nconst Stream = ({ navigation }) => {\n\n  const connection = useMemo(() => new RTCPeerConnection({}));\n  \n  const [ stream, setStream ] = useState();\n\n  console.log(navigator, navigation)\n  \n\n  const [ src, setSrc ] = useState(null);\n\n\n  const videoRef = useRef();\n  const textareaRef = useRef();\n\n  const handlePlayStream = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n    setStream(stream);\n  }, []);\n\n  useEffect(() => {\n    videoRef.current.srcObject = stream;\n  }, [stream]);\n\n  useEffect(() => {\n    navigator.mediaDevices.enumerateDevices().then((devices) => {\n      // console.log(devices);\n    }).catch();\n  }, []);\n\n  const handleOffer = useCallback(async () => {\n    connection.onicecandidate = (e) => {\n      if (e.candidate) {\n        const value = textareaRef.current.value;\n        const obj = JSON.parse(value);\n        obj.candidates.push({ \n          address: e.candidate.address,\n          candidate: e.candidate.candidate,\n          component: e.candidate.component,\n          foundation: e.candidate.foundation,\n          port: e.candidate.port,\n          priority: e.candidate.priority,\n          protocol: e.candidate.protocol,\n          relatedAddress: e.candidate.relatedAddress,\n          relatedPort: e.candidate.relatedPort,\n          sdpMLineIndex: e.candidate.sdpMLineIndex,\n          sdpMid: e.candidate.sdpMid,\n          tcpType: e.candidate.tcpType,\n          type: e.candidate.type,\n          usernameFragment: e.candidate.usernameFragment,\n        });\n        textareaRef.current.value = JSON.stringify(obj); \n      }\n    }\n\n    connection.ontrack = () => {\n      console.log(\"Offer got some connection\")\n    }\n\n    stream.getTracks().forEach(track => connection.addTrack(track, stream));\n    \n    const offer = await connection.createOffer({ offerToReceiveAudio: true, offerToReceiveVideo: true });\n    \n    const value = { offer: offer, candidates: [] };\n    textareaRef.current.value = JSON.stringify(value);    \n    \n    connection.setLocalDescription(offer);\n\n  }, [stream, connection]);\n\n  const handleAnswer = useCallback(async() => {\n    const { offer, candidates } = JSON.parse(textareaRef.current.value);\n\n\n\n    connection.onicecandidate = (e) => {\n      if (e.candidate) {\n        const value = textareaRef.current.value;\n        const obj = JSON.parse(value);\n        obj.candidates.push({ \n          address: e.candidate.address,\n          candidate: e.candidate.candidate,\n          component: e.candidate.component,\n          foundation: e.candidate.foundation,\n          port: e.candidate.port,\n          priority: e.candidate.priority,\n          protocol: e.candidate.protocol,\n          relatedAddress: e.candidate.relatedAddress,\n          relatedPort: e.candidate.relatedPort,\n          sdpMLineIndex: e.candidate.sdpMLineIndex,\n          sdpMid: e.candidate.sdpMid,\n          tcpType: e.candidate.tcpType,\n          type: e.candidate.type,\n          usernameFragment: e.candidate.usernameFragment,\n        });\n        textareaRef.current.value = JSON.stringify(obj); \n      }\n    }\n\n    \n\n    connection.ontrack = (e) => {\n      console.log(\"Answer got some connection \");\n      if (videoRef.current.srcObject !== e.streams[0]) {\n        videoRef.current.srcObject = e.streams[0];\n        console.log('pc2 received remote stream', e, e.streams[0]);\n        setSrc(\"false\");\n      }\n    }\n\n    connection.setRemoteDescription(offer);\n    candidates.map(c => {\n      connection.addIceCandidate(c).then().catch(e => console.log(e))\n    });\n    \n    const answer = await connection.createAnswer();\n    connection.setLocalDescription(answer);\n\n    \n\n\n    \n\n    const value = { answer: answer, candidates: [] };\n    textareaRef.current.value = JSON.stringify(value);\n\n\n  }, [stream, connection]);\n\n  const handleLoad = useCallback(() => {\n\n    // navigator.clipboard.writeText(\"hello world\")\n\n\n    const { answer, candidates } = JSON.parse(textareaRef.current.value);\n    connection.setRemoteDescription(answer);\n\n    candidates.map(c => {\n      connection.addIceCandidate(c).then().catch(e => console.log(e))\n    });\n\n    textareaRef.current.value = \"done\";\n\n  }, [stream, connection]);\n\n  return (\n    <div className={styles.stream}>\n      <video suppressContentEditableWarning={src} ref={videoRef} autoPlay playsInline onClick={(e) => { console.log(e.target) }} />\n      <button onClick={handlePlayStream}>\n        Start\n      </button>\n      <button onClick={handleOffer}>\n        Offer\n      </button>\n      <button onClick={handleAnswer}>\n        Answer\n      </button>\n      <button onClick={handleLoad}>\n        Load\n      </button>\n      <textarea ref={textareaRef}>\n\n      </textarea>\n\n    </div>\n  );\n}\n\nexport default Stream;\n","import { useCallback, useState } from \"react\";\nimport Stream from \"../components/stream/Stream\"\n\nconst App = () => {\n\n\n\n  return (\n    <div className=\"App\">\n      <Stream />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}